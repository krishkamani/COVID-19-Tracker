{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","images/image.png","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","modifiedData","fetchDailyData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","App","state","fetchedData","setState","this","image","src","coronaimage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sGACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,KAAO,oBAAoB,SAAW,wBAAwB,UAAY,yBAAyB,OAAS,wB,mOCqDpJC,EA/CD,SAAC,GAAwD,IAAD,IAAtDC,KAAOC,EAA+C,EAA/CA,UAAWC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,WACjD,OAAIH,EAKA,qBAAKI,UAAWC,IAAOC,UAAvB,SACI,eAACC,EAAA,EAAD,CAAMD,WAAS,EAACE,QAAS,EAAGC,QAAQ,SAApC,UACI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOY,UAA7E,SACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,EAA9C,sBACA,cAACF,EAAA,EAAD,CAAYG,QAAQ,KAApB,SACA,cAAC,IAAD,CAASC,MAAO,EAAGC,IAAKxB,EAAUyB,MAAOC,SAAU,IACnDC,UAAU,QAEV,cAACR,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,EAA9C,SAAgD,IAAIO,KAAKzB,GAAY0B,iBACrE,cAACV,EAAA,EAAD,CAAYG,QAAQ,QAApB,qDAGR,cAACf,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOJ,WAA7E,SACI,eAACiB,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,EAA9C,uBACA,cAACF,EAAA,EAAD,CAAYG,QAAQ,KAApB,SACA,cAAC,IAAD,CAASC,MAAO,EAAGC,IAAKvB,EAAUwB,MAAOC,SAAU,IACnDC,UAAU,QAEV,cAACR,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,EAA9C,SAAgD,IAAIO,KAAKzB,GAAY0B,iBACrE,cAACV,EAAA,EAAD,CAAYG,QAAQ,QAApB,qDAGR,cAACf,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOH,QAA7E,SACI,eAACgB,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,EAA9C,mBACA,cAACF,EAAA,EAAD,CAAYG,QAAQ,KAApB,SACA,cAAC,IAAD,CAASC,MAAO,EAAGC,IAAKtB,EAAOuB,MAAOC,SAAU,IAChDC,UAAU,QAEV,cAACR,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,EAA9C,SAAgD,IAAIO,KAAKzB,GAAY0B,iBACrE,cAACV,EAAA,EAAD,CAAYG,QAAQ,QAApB,0DApCT,c,yBCPTQ,EAAM,iCAECC,EAAS,uCAAE,WAAOC,GAAP,6BAAAC,EAAA,6DAChBC,EAAgBJ,EACjBE,IACCE,EAAc,GAAD,OAAKJ,EAAL,sBAAsBE,IAHnB,kBAMgDG,IAAMC,IAAIF,GAN1D,2BAMTnC,KAAMC,EANG,EAMHA,UAAWC,EANR,EAMQA,UAAWC,EANnB,EAMmBA,OAAQC,EAN3B,EAM2BA,WACrCkC,EAAe,CACjBrC,YACAC,YACAC,SACAC,cAXY,kBAaTkC,GAbS,4FAAF,sDAmBTC,EAAc,uCAAG,gCAAAL,EAAA,+EAEDE,IAAMC,IAAN,UAAaN,EAAb,WAFC,uBAEf/B,EAFe,EAEfA,KACDsC,EAAetC,EAAKwC,KAAI,SAACC,GAAD,MAAe,CACzCxC,UAAWwC,EAAUxC,UAAUyC,MAC/BvC,OAAQsC,EAAUtC,OAAOuC,MACzBC,KAAMF,EAAUG,eANE,kBAQfN,GARe,yFAAH,qDAcdO,EAAc,uCAAG,8BAAAX,EAAA,+EAEYE,IAAMC,IAAN,UAAaN,EAAb,eAFZ,uBAERe,EAFQ,EAEf9C,KAAO8C,UAFQ,kBAIfA,EAAUN,KAAI,SAACP,GAAD,OAAWA,EAAQc,SAJlB,yFAAH,qD,yBC0BZC,EA1DD,SAAC,GAAoD,IAAD,IAAlDhD,KAAMC,EAA4C,EAA5CA,UAAWC,EAAiC,EAAjCA,UAAWC,EAAsB,EAAtBA,OAAS8B,EAAa,EAAbA,QAAa,EAC5BgB,mBAAS,IADmB,mBACvDR,EADuD,KAC5CS,EAD4C,KAG9DC,qBAAU,YACQ,uCAAG,sBAAAjB,EAAA,kEACbgB,EADa,SACMX,IADN,6EAAH,qDAGda,KACF,IACF,IAAMC,EACFZ,EAAUa,OAEV,cAAC,OAAD,CACAtD,KAAQ,CACJuD,OAAQd,EAAUD,KAAI,qBAAEG,QACxBa,SAAS,CAAC,CACNxD,KAAMyC,EAAUD,KAAI,qBAAEvC,aACtBwD,MAAO,WACPC,YAAa,UACbC,MAAK,GACP,CACE3D,KAAMyC,EAAUD,KAAI,qBAAErC,UACtBsD,MAAO,SACPC,YAAY,MACZE,gBAAiB,oBACjBD,MAAK,OAGR,KAGHE,EACF5D,EAEI,cAAC,MAAD,CACAD,KAAM,CACFuD,OAAO,CAAC,WAAW,YAAY,UAC/BC,SAAS,CAAC,CACNC,MAAM,SACNG,gBAAgB,CAAC,uBAAuB,uBACxC,wBACA5D,KAAK,CAACC,EAAUyB,MAAOxB,EAAUwB,MAAOvB,EAAOuB,UAGvDoC,QAAS,CACLC,OAAO,CAACC,SAAS,GACjBC,MAAM,CAACD,SAAQ,EAAME,KAAK,oBAAD,OAAqBjC,OAGpD,KAEN,OACI,qBAAK5B,UAAWC,IAAOC,UAAvB,SACK0B,EAAS4B,EAAUR,K,mCCjCjBc,EApBO,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,oBAAyB,EACGnB,mBAAS,IADZ,mBACtCoB,EADsC,KACpBC,EADoB,KAU7C,OAPAnB,qBAAU,YACQ,uCAAG,sBAAAjB,EAAA,kEACboC,EADa,SACazB,IADb,6EAAH,qDAIdO,KACF,IAEE,cAACmB,EAAA,EAAD,CAAalE,UAAWC,IAAOkE,YAA/B,SACI,eAACC,EAAA,EAAD,CAAcC,aAAa,GAAGC,SAAU,SAACC,GAAD,OAAMR,EAAoBQ,EAAEC,OAAOnD,QAA3E,UACI,wBAAQA,MAAM,GAAd,oBACC2C,EAAiB7B,KAAI,SAACP,EAAS6C,GAAV,OAAgB,wBAAgBpD,MAAOO,EAAvB,SAAiCA,GAApB6C,Y,iBCnBpD,MAA0B,kCCsC1BC,E,4MA1BXC,MAAO,CACHhF,KAAK,GACLiC,QAAQ,I,EAOZmC,oB,uCAAsB,WAAOnC,GAAP,eAAAC,EAAA,sEACQF,EAAUC,GADlB,OACZgD,EADY,OAElB,EAAKC,SAAS,CAAElF,KAAMiF,EAAahD,QAASA,IAF1B,2C,oJALtB,4BAAAC,EAAA,sEAC8BF,IAD9B,OACUiD,EADV,OAEIE,KAAKD,SAAS,CAAClF,KAAKiF,IAFxB,gD,0EASA,WAAS,IAAD,EACoBE,KAAKH,MAAtBhF,EADH,EACGA,KAAMiC,EADT,EACSA,QACb,OACI,sBAAK5B,UAAWC,IAAOC,UAAvB,UACI,qBAAKF,UAAWC,IAAO8E,MAAOC,IAAKC,EAAaC,IAAI,aACpD,cAAC,EAAD,CAAOvF,KAAMA,IACb,cAAC,EAAD,CAAeoE,oBAAqBe,KAAKf,sBACzC,cAAC,EAAD,CAAOpE,KAAMA,EAAMiC,QAASA,W,GAtB1BuD,IAAMC,WCNxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U,mBCHjDhG,EAAOC,QAAU,CAAC,UAAY,uBAAuB,MAAQ,qB,mBCA7DD,EAAOC,QAAU,CAAC,UAAY,2B,mBCA9BD,EAAOC,QAAU,CAAC,YAAc,sC","file":"static/js/main.3cd13ce7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2alGs\",\"card\":\"Cards_card__1p0RK\",\"infected\":\"Cards_infected__2GT1X\",\"recovered\":\"Cards_recovered__26pGG\",\"deaths\":\"Cards_deaths__2459G\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid} from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames'; \r\n\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards = ({data :{confirmed, recovered, deaths, lastUpdate}}) => {\r\n    if(!confirmed){\r\n        return \"Loading...\";\r\n    }\r\n    \r\n    return(\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                        <CountUp start={0} end={confirmed.value} duration={2.5} \r\n                        separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\" gutterBottom>{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\">\r\n                        <CountUp start={0} end={recovered.value} duration={2.5} \r\n                        separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\" gutterBottom>{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Death</Typography>\r\n                        <Typography variant=\"h5\">\r\n                        <CountUp start={0} end={deaths.value} duration={2.5} \r\n                        separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\" gutterBottom>{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of death caused by COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData =async (country) => {\r\n    let changeableUrl = url;\r\n    if(country){\r\n        changeableUrl= `${url}/countries/${country}`;\r\n    }\r\n    try {\r\n        const {data:{confirmed, recovered, deaths, lastUpdate}} = await axios.get(changeableUrl);   \r\n        const modifiedData = {\r\n            confirmed,\r\n            recovered,\r\n            deaths,\r\n            lastUpdate,\r\n        }\r\n        return modifiedData;\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () =>{\r\n    try {\r\n        const {data} = await axios.get(`${url}/daily`);\r\n        const modifiedData = data.map((dailyData) =>({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n        }));\r\n        return modifiedData;\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () =>{\r\n    try {\r\n        const {data: {countries}} = await axios.get(`${url}/countries`);\r\n        \r\n        return countries.map((country)=>country.name);\r\n\r\n    } catch (error) {\r\n        \r\n    }\r\n}","import React, {useState, useEffect} from 'react';\r\nimport {fetchDailyData} from '../../api';\r\nimport {Line, Bar} from 'react-chartjs-2';\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({data:{confirmed, recovered, deaths}, country}) => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n        fetchAPI();\r\n    },[]);\r\n    const lineChart = (\r\n        dailyData.length\r\n        ? (\r\n        <Line \r\n        data = {{\r\n            labels: dailyData.map(({date}) => date),\r\n            datasets:[{\r\n                data: dailyData.map(({confirmed}) => confirmed),\r\n                label: 'Infected',\r\n                borderColor :'#3333FF',\r\n                fill:true,\r\n            },{\r\n                data: dailyData.map(({deaths}) => deaths),\r\n                label: 'Deaths',\r\n                borderColor:'red',\r\n                backgroundColor :'rgba(250,0,0,0.5)',\r\n                fill:true,\r\n            }],\r\n        }}\r\n        />): null\r\n    );\r\n\r\n    const barChart = (\r\n        confirmed\r\n        ?(\r\n            <Bar \r\n            data={{\r\n                labels:['Infected','Recovered','Deaths'],\r\n                datasets:[{\r\n                    label:'People',\r\n                    backgroundColor:['rgba(0, 0, 255, 0.5)','rgba(0, 255, 0, 0.5)',\r\n                    'rgba(255, 0, 0, 0.5)'],\r\n                    data:[confirmed.value, recovered.value, deaths.value]\r\n                }]\r\n            }}\r\n            options={{\r\n                legend:{display: false},\r\n                title:{display:true, text:`Current state in ${country}`},\r\n            }}\r\n            />\r\n        ):null\r\n    )\r\n    return(\r\n        <div className={styles.container}>\r\n            {country? barChart: lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React, {useState, useEffect} from 'react';\r\nimport {NativeSelect, FormControl} from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css';\r\nimport {fetchCountries} from '../../api';\r\n\r\nconst CountryPicker = ({handleCountryChange}) => {\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n    useEffect(() =>{\r\n        const fetchAPI = async () =>{\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n\r\n        fetchAPI();\r\n    },[]);\r\n    return(\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e)=> handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","export default __webpack_public_path__ + \"static/media/image.9e5d4fc7.png\";","import React from 'react';\r\n/* import Cards from './components/Cards/Cards';\r\nimport Chart from './components/Chart/Chart';\r\nimport CountryPicker from './components/CountryPicker/CountryPicker';\r\n */\r\nimport {Cards, Chart, CountryPicker} from './components';\r\nimport styles from './App.module.css';\r\nimport {fetchData} from './api';\r\nimport coronaimage from './images/image.png';\r\n\r\nclass App extends React.Component{\r\n\r\n    state ={\r\n        data:{},\r\n        country:'',\r\n    }\r\n    async componentDidMount(){\r\n        const fetchedData = await fetchData();\r\n        this.setState({data:fetchedData});\r\n    }\r\n\r\n    handleCountryChange = async (country)=>{\r\n        const fetchedData = await fetchData(country);\r\n        this.setState({ data: fetchedData, country: country });\r\n    }\r\n    render(){\r\n        const {data, country} = this.state;\r\n        return(\r\n            <div className={styles.container}>\r\n                <img className={styles.image} src={coronaimage} alt=\"COVID-19\"/>\r\n                <Cards data={data}/>\r\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n                <Chart data={data} country={country}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3zrKN\",\"image\":\"App_image__3gZi8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1-nT8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__F00la\"};"],"sourceRoot":""}